<!DOCTYPE html>
<html>
  <head>
    <title>Nikki Restaurant Chat Bot</title>
   <link rel="stylesheet" href="style.css" class="">
   <link rel="icon" type="image/png" sizes="42x42" href="./images/favicon-32x32.png">
  </head>
  <body>
     <div class="roomSection">
      <div id="chatBox"></div>
       <form id="form">
          <input id="input" autocomplete="off" />
          <button  id="buttonEle">
            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M20 4L3 11L10 14L13 21L20 4Z" stroke="rgb(17, 209, 145)" stroke-width="1.5" stroke-linejoin="round"></path> </g></svg>
          </button>
      </form>
     </div>
  
    <!-- <script src="/socket.io/socket.io.js"></script> -->
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>
      // Establish a socket io connection to the server 
        var socket = io();

        // Query DOM elements
        var chatBox  = document.getElementById("chatBox");
        var form = document.getElementById("form");
        var input = document.getElementById("input");
        var sendBtn = document.getElementById("buttonEle")
        // Help function to append message to the chatbot
      function Message(message , sender){
          const messageElement = document.createElement("div");
          messageElement.className = "message-text";
          messageElement.id = sender
          messageElement.textContent = message;


        // Create timestamp
        const timestamp = new Date().toLocaleTimeString()
         // create span element for timestamp
         const timestampElement = document.createElement("span")
         timestampElement.className = "timestamp"
         timestampElement.textContent = timestamp;
  

        const messageContainer = document.createElement("div")
        const messageOutContainer = document.createElement("div");
        messageContainer.className = "message-container" + sender;
        messageOutContainer.className = "message-outer-container" + sender;
        messageElement.innerHTML = message.replace(/\n/g, "<br>")
        messageOutContainer.appendChild(messageContainer)
        messageContainer.appendChild(messageElement)
        messageContainer.appendChild(timestampElement)
        chatBox.appendChild(messageOutContainer);
        // Chat Box scrolling Effect 
        chatBox.scrollTop = chatBox.scrollHeight    
}

  
// Handle sending messages
function sendMassage(){
        const message =  input.value;
        if(message === ""){
          return;
        }

      Message(message, "user");
        socket.emit("user-message", message)
        input.value = "";
}

// Handle receiving messages from the server 
socket.on("bot-message", (message) => {
  Message(message,"bot");
})


// Attach event listeners
   form.addEventListener("submit", (e) => {
    e.preventDefault();
      sendMessage()
   })
 

   sendBtn.addEventListener("click" ,sendMassage)
   input.addEventListener("keydown" , (e) => {
   if(e.key === "Enter"){
    e.preventDefault()
     sendMassage()
    }
   })

  //       // Socket io form event  from socket io document
  //       form.addEventListener('submit', function(e) {
  //       e.preventDefault();
  //       if (input.value) {
  //         socket.emit('chat message', input.value);
  //               input.value = '';
  //   }
  // });


 
   </script>
  </body>
</html>